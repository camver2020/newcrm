[
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.CampingCarController",
    "Method": "GetCampingCars",
    "RelativePath": "api/CampingCar",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.CampingCarController\u002BCampingCar, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.MemberController",
    "Method": "CreateMember",
    "RelativePath": "api/Member",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "memberData",
        "Type": "CampingCarCrm_Backend.Controllers.MemberController\u002BMember",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.MemberController",
    "Method": "GetMembers",
    "RelativePath": "api/Member",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.MemberController\u002BMember, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "GetBranches",
    "RelativePath": "api/Options/branches",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.OptionsController\u002BBranch, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "AddBranch",
    "RelativePath": "api/Options/branches",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branch",
        "Type": "CampingCarCrm_Backend.Controllers.OptionsController\u002BBranch",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "DeleteBranch",
    "RelativePath": "api/Options/branches/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "GetCompanies",
    "RelativePath": "api/Options/companies",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.OptionsController\u002BCompany, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "AddCompany",
    "RelativePath": "api/Options/companies",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "company",
        "Type": "CampingCarCrm_Backend.Controllers.OptionsController\u002BCompany",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "DeleteCompany",
    "RelativePath": "api/Options/companies/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "GetManagers",
    "RelativePath": "api/Options/managers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.OptionsController\u002BManager, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "AddManager",
    "RelativePath": "api/Options/managers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "manager",
        "Type": "CampingCarCrm_Backend.Controllers.OptionsController\u002BManager",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "DeleteManager",
    "RelativePath": "api/Options/managers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.OptionsController",
    "Method": "GetStatuses",
    "RelativePath": "api/Options/statuses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.OptionsController\u002BStatus, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.ReservationController",
    "Method": "CreateReservation",
    "RelativePath": "api/Reservation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationData",
        "Type": "CampingCarCrm_Backend.Controllers.ReservationController\u002BReservation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.ReservationController",
    "Method": "UpdateReservation",
    "RelativePath": "api/Reservation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "reservationData",
        "Type": "CampingCarCrm_Backend.Controllers.ReservationController\u002BReservation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.ReservationController",
    "Method": "DeleteReservation",
    "RelativePath": "api/Reservation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.ReservationController",
    "Method": "GetReservationsByDate",
    "RelativePath": "api/Reservation/bydate/{date}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "date",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.Controllers.ReservationController\u002BReservation, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "CampingCarCrm_Backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[CampingCarCrm_Backend.WeatherForecast, CampingCarCrm_Backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]